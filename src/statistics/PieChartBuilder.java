package statistics;

import java.awt.Image;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;

import javax.imageio.ImageIO;

import utils.Tweet;

import com.googlecode.charts4j.AbstractGraphChart;
import com.googlecode.charts4j.Color;
import com.googlecode.charts4j.Fills;
import com.googlecode.charts4j.GCharts;
import com.googlecode.charts4j.PieChart;
import com.googlecode.charts4j.Slice;

import feeling.Classifier;
import feeling.Feeling;

/**
 * Class representing objects that generate pie chart from a classifier results on a list of tweets.
 * 
 * @author Quentin Baert & Thomas Bernard
 */
public class PieChartBuilder extends ChartBuilder {

	/////////////
	// METHODS //
	/////////////

	/**
	 * Constructor.
	 * 
	 * @param classifier
	 *            classifier from which build the chart
	 * @param tweets
	 *            list of tweet to classify
	 */
	public PieChartBuilder ( Classifier classifier, String request, List< Tweet > tweets ) {
		super( classifier, request, tweets );
	}

	@Override
	public AbstractGraphChart generatesChart () {
		int positives = 0;
		int negatives = 0;
		int neutrals = 0;
		int nb = this.tweets.size();

		// Tweets classification
		for ( Tweet tweet : this.tweets ) {
			Feeling feeling = this.classifier.classifies( tweet.getMsg() );

			if ( feeling == Feeling.POSITIVE ) {
				positives++;
			} else if ( feeling == Feeling.NEUTRAL ) {
				neutrals++;
			} else if ( feeling == Feeling.NEGATIVE ) {
				negatives++;
			}
		}

		// Slices construction
		Slice positivesSlice =
		        Slice.newSlice( ( positives * 100 ) / nb, Color.newColor( "CACACA" ), "Positive tweets", "Positive tweets" );
		Slice negativesSlice =
		        Slice.newSlice( ( negatives * 100 ) / nb, Color.newColor( "DF7417" ), "Negative tweets", "Negative tweets" );
		Slice neutralsSlice =
		        Slice.newSlice( ( neutrals * 100 ) / nb, Color.newColor( "951800" ), "Neutral tweets", "Neutral tweets" );

		// Pie chart creation
		PieChart chart = GCharts.newPieChart( positivesSlice, negativesSlice, neutralsSlice );

		// Pie chart parameters
		chart.setTitle( "Feeling about : " + this.request, Color.BLACK, 16 );
		chart.setSize( 600, 200 );
		chart.setThreeD( true );
		
		// Transparent background
		chart.setBackgroundFill( Fills.newSolidFill( Color.newColor( "000000", 0 ) ) );

		// Ajouter le PieChartBuilder au TendanciesPanel pour le test

		return chart;
	}

	/**
	 * Gives an image of the pie chart generated by this PieChartBuilder.
	 * 
	 * @return image of the pie chart generated by this PieChartBuilder
	 * @throws MalformedURLException
	 * @throws IOException
	 */
	public Image getPieChartImage () throws MalformedURLException, IOException {
		return ImageIO.read( new URL( this.generatesChart().toURLString() ) );
	}

}
